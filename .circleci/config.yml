version: 2.1

orbs:
  changelog: onimur/github-changelog-generator@2.1.9
  mem: circleci/rememborb@0.0.1

commands:
  export-env-var:
    steps:
      - mem/remember:
          env_var: DATE_FORMAT
          value: "%d-%m-%y"
      - mem/remember:
          env_var: OUTPUT_CHANGELOG
          value: CHANGELOG.md

jobs:
  build:
    docker:
      - image: circleci/php:8.0.9-node-browsers
      - image: circleci/mysql:5.7.22
        environment:
          MYSQL_DATABASE: creativestreams
          MYSQL_USER: senshudo
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: root

    steps:
      - checkout

      - run:
          name: "Prepare Environment"
          command: |
              sudo apt-get update && sudo apt-get install -y libonig-dev libmcrypt-dev
              sudo docker-php-ext-install bcmath mbstring zip pcntl exif pdo_mysql

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-

      - run: composer install -n --prefer-dist --optimize-autoloader

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

#      - restore_cache:
#          keys:
#            - node-v1-{{ checksum "package.json" }}
#            - node-v1-
#      - run: npm install
#      - save_cache:
#          key: node-v1-{{ checksum "package.json" }}
#          paths:
#            - node_modules

      - run: cp .env.example .env

      - run:
          name: "PHP Coding Standards"
          command: composer run test:lint

      - run:
          name: "Run Unit Tests"
          command: |
            mkdir -p ~/phpunit
            php artisan test --log-junit ~/phpunit/junit.xml tests
          when: always
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit

  publish_release:
    docker:
      - image: cibuilds/github:0.13
    steps:
      - export-env-var
      - checkout
      - mem/recall:
          env_var: DATE_FORMAT
      - mem/recall:
          env_var: OUTPUT_CHANGELOG
      - run:
          name: Publish Release on GitHub
          command: |
            DATE=$(date +${DATE_FORMAT})
            TAG_WITHOUT_DOT="${CIRCLE_TAG//./}"
            TITLE="Circleci Orb Common Tools"
            URL_CHANGELOG="https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/blob/main/${OUTPUT_CHANGELOG}#${TAG_WITHOUT_DOT}-${DATE}"
            printf -v BODY "$(<./docs/RELEASE_TEMPLATE.md)" \
            "${TITLE}" "${DATE}" "${CIRCLE_TAG}" "${CIRCLE_BUILD_NUM}" "${CIRCLE_BUILD_URL}" "${OUTPUT_CHANGELOG}" "${URL_CHANGELOG}"
            ghr \
            -t ${GITHUB_TOKEN} \
            -u ${CIRCLE_PROJECT_USERNAME} \
            -r ${CIRCLE_PROJECT_REPONAME}  \
            -b "${BODY}" \
            -c ${CIRCLE_SHA1}  \
            -delete ${CIRCLE_TAG}

orb_tagged_filters: &orb_tagged_filters
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v\d+\.\d+\.\d+$/

workflows:
  release:
    jobs:
      - build:
          <<: *orb_tagged_filters
      - publish_release:
          <<: *orb_tagged_filters
          requires:
            - build
      - changelog/changelog-custom:
          <<: *orb_tagged_filters
          pre-steps:
            - export-env-var
            - checkout
            - mem/recall:
                env_var: DATE_FORMAT
            - mem/recall:
                env_var: OUTPUT_CHANGELOG
          context: main-context
          token: GITHUB_TOKEN
          git-push: true
          date-format: ${DATE_FORMAT}
          breaking-label: "**Breaking**"
          bugs-label: "**Bugs**"
          output: ${OUTPUT_CHANGELOG}
          requires:
             - publish_release
